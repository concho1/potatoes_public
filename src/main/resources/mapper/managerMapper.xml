<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goott.potatoes.manager.model.ManagerMapper">

    <insert id="crtCol">
        insert ignore into goott.userCnt values(curdate(), default, default, default)
    </insert>

    <update id="updateGuestCnt">
        update goott.userCnt set guest_count = guest_count + 1 where date = curdate()
    </update>

    <select id="getUserCnt" parameterType="String" resultType="UserCnt">
        select * from goott.userCnt where date = #{date}
    </select>

    <select id="countMissing" resultType="int">
        select count(*) from goott.missing
    </select>

    <select id="getUserListForMain" parameterType="int" resultType="User">
        <![CDATA[
            select * from (select row_number() over(order by created_at desc) rnum, u.* from goott.user u) as `ru.*` where rnum >= 1 and rnum <= #{size}
        ]]>
    </select>

    <delete id="deleteUser" parameterType="String">
        delete from goott.user where id = #{id}
    </delete>

    <select id="getMissingListForMain" parameterType="int" resultType="missing">
        <![CDATA[
            select * from (select row_number() over (order by mis_num desc) rnum, m.* from goott.missing m) as `rm.*` where rnum >= 1 and rnum <= #{size}
        ]]>
    </select>

    <select id="getBoardListForMain" parameterType="int" resultType="Board">
        <![CDATA[
            select * from (select row_number() over (order by board_num desc) rnum, b.* from goott.board b) as `bm.*` where rnum >= 1 and rnum <= #{size}
        ]]>
    </select>

    <select id="getPickUpListForMain" parameterType="int" resultType="pickup">
        <![CDATA[
            select * from (select row_number() over (order by pick_num desc) rnum, p.* from goott.pickup p) as `pm.*` where rnum >= 1 and rnum <= #{size}
        ]]>
    </select>

    <select id="getFAQListForMain" parameterType="int" resultType="FAQ">
        <![CDATA[
            select * from faq order by num
        ]]>
    </select>

    <select id="getQNAList" resultType="QNA">
        select * from goott.qna where qna_step = 0 order by qna_group desc
    </select>

    <select id="getQNA" parameterType="int" resultType="QNA">
        select * from goott.qna where num = #{no}
    </select>

    <insert id="answerQNA" parameterType="QNA">
        <selectKey resultType="int" keyProperty="num" order="BEFORE">
            select max(num) + 1 from goott.qna
        </selectKey>
            insert into goott.qna values(#{num}, #{userNickname}, #{title}, #{cont}, now(), default, 2, #{qnaGroup}, 1, 1);
    </insert>

    <update id="updateQNAStatus" parameterType="int">
        update goott.qna set qna_status = 1 where num = #{no}
    </update>

    <select id="getAllUserList" resultType="User">
        select * from goott.user order by created_at desc;
    </select>

    <select id="getAllBoard" resultType="Board">
        select * from goott.board order by board_num desc
    </select>

    <select id="getBoardReplyCount" parameterType="int" resultType="int">
        select count(*) from goott.board_reply where board_num = #{no}
    </select>

    <select id="getBoard" parameterType="int" resultType="Board">
        select * from goott.board where board_num = #{no}
    </select>

    <select id="getBoardReplyList" parameterType="int" resultType="BoardReply">
        select * from goott.board_reply where board_num = #{no} order by reply_num
    </select>

    <update id="deleteBoardReply" parameterType="int">
        update goott.board_reply set id = 'Warning', cont = '관리자에 의해 삭제된 댓글입니다.' where reply_num = #{no}
    </update>

    <update id="modBoard" parameterType="Board">
        update goott.board set title = #{title}, cont = #{cont}, img_key = #{imgKey} where board_num = #{boardNum}
    </update>

    <delete id="deleteBoard" parameterType="int">
        delete from goott.board where board_num = #{no}
    </delete>

    <update id="updateBoardSequence" parameterType="int">
        update goott.board set board_num = board_num - 1 where board_num > #{no}
    </update>

    <update id="updateBoardReplySequence" parameterType="int">
        update goott.board_reply set board_num = board_num - 1 where board_num > #{no}
    </update>

    <select id="getAllMissing" resultType="missing">
        select * from goott.missing order by mis_num desc
    </select>

    <select id="getAllPickUp" resultType="pickup">
        select * from goott.pickup order by pick_num desc
    </select>

    <select id="getMissing" parameterType="int" resultType="missing">
        select * from goott.missing where mis_num = #{no}
    </select>

    <update id="modMissing" parameterType="missing">
        update goott.missing set title = #{title}, cont = #{cont}, img_key = #{imgKey} where mis_num = #{misNum}
    </update>

    <delete id="deleteMissing" parameterType="int">
        delete from goott.missing where mis_num = #{no}
    </delete>

    <update id="updateMissingSequence" parameterType="int">
        update goott.missing set mis_num = mis_num - 1 where mis_num > #{no}
    </update>

    <select id="getPickUp" parameterType="int" resultType="pickup">
        select * from goott.pickup where pick_num = #{no}
    </select>

    <update id="modPickUp" parameterType="pickup">
        update goott.pickup set title = #{title}, cont = #{cont}, img_key = #{imgKey} where pick_num = #{pickNum}
    </update>

    <delete id="deletePickUp" parameterType="int">
        delete from goott.pickup where pick_num = #{no}
    </delete>

    <update id="updatePickUpSequence" parameterType="int">
        update goott.pickup set pick_num = pick_num - 1 where pick_num > #{no}
    </update>

    <update id="updateFAQ" parameterType="FAQ">
        update goott.faq set title = #{title}, cont = #{cont} where num = #{num}
    </update>

    <insert id="insertFAQ" parameterType="FAQ">
        insert into goott.faq(title, cont) values(#{title}, #{cont})
    </insert>

</mapper>